import Head from "next/head";
import Image from 'next/image';
export default function Home() {
  return (
    <div>
      <Head>
        <title>Simple Next.js</title>
      </Head>
      <h1 className="text-4xl text-[#009B5A] font-bold">This is a home page</h1>
      <p className="mt-2 text-2xl text-gray-900">Next.js is an open-source development framework built on top of Node.js enabling React based web applications functionalities such as server-side rendering and generating static websites. React documentation mentions Next.js among. &ldquo; Recommended Toolchains &ldquo; advising it to developers as a solution when &ldquo; Building a server-rendered website with Node.js &ldquo; .Traditional React apps render all their content in the client-side browser, Next.js is used to extend this functionality to include applications rendered on the server side.The copyright and trademarks for Next.js are owned by company Vercel (previously named ZEIT), which also maintains and leads its open-source development.[5]</p>

      {/* Image */}
      <div style={{ margin: 'auto' }}>
        <Image src="/next-code.svg" layout="responsive" width={700} height={300} alt="Next.js" />
      </div>

      {/* Background */}
      <h1 className="text-2xl text-[#009B5A] font-bold mt-4">Background</h1>
      <p className="mt-3 text-2xl text-gray-700">Next.js is a React framework that enables several extra features, including server-side rendering and generating static websites.[6] React is a JavaScript library that is traditionally used to build web applications rendered in the client&#34;s browser with JavaScript.[7] Developers recognize several problems with this strategy however, such as not catering to users who do not have access to JavaScript or have disabled it, potential security issues, significantly extended page loading times, and it can harm the site&#34;s overall search engine optimization.[7] Frameworks such as Next.js sidestep these problems by allowing some or all of the website to be rendered on the server-side before being sent to the client.[7][8] Next.js is one of the most popular components available in React.[9] It is one of several recommended &#34; toolchains &#34; available when starting a new app, all of which provide a layer of abstraction to aid in common tasks.[10] Next.js requires Node.js and can be initialized using Node Package Manager.</p>

      <p className="mt-2 text-2xl text-gray-700">Google has donated to the Next.js project, contributing 43 pull requests in 2019, where they helped in pruning unused JavaScript, reducing overhead time, and adding improved metrics.[11] As of March 2020, the framework is used by many large websites, including Netflix, GitHub, Uber, Ticketmaster, and Starbucks.[7] In early 2020, it was announced that Vercel had secured twenty-one million dollars in Series A funding to support improvements to the software.[1] The framework&#34;s original author, Guillermo Rauch, is currently the CEO of Vercel, and the project&#34;s lead developer is Tim Neutkens.[12]</p>

      {/* Development history */}
      <h1 className="text-2xl text-[#009B5A] font-bold mt-4">Development history</h1>
      <p className="mt-3 text-2xl text-gray-700">Next.js was first released as an open-source project on GitHub on October 25, 2016; 5 years ago.[3] It was originally developed based on six principles: out-of-the box functionality requiring no setup, JavaScript everywhere, all functions are written in JavaScript, automatic code-splitting and server-rendering, configurable data-fetching, anticipating requests, and simplifying deployment.[13] Next.js 2.0 was announced in March 2017 including several improvements that made it easier to work with small websites. It also increased the build efficiency and improved the scalability of the hot-module replacement feature.[14] Version 7.0 was released in September 2018 with improved error handling and support for React&apos;s context API for improved dynamic route handling. This was also the first version to upgrade to webpack 4.[15] Version 8.0 was released in February 2019 and was the first version to offer serverless deployment of applications, in which the code is split up into lambda functions that are run on demand. The version also reduced the time and resources required for static exports and improved prefetch performance.[16] Version 9.3, announced in March 2020, included various optimizations and global Sass and CSS module support.[17] On July 27, 2020 Next.js version 9.5 was announced, adding new capabilities including incremental static regeneration, rewrites, and redirect support.[18] On June 15, 2021 Next.js version 11 was released, introducing among others: Webpack 5 support, preview of real-time collaborative coding functionality &quot;Next.js Live&quot;, and experimental function of automatic conversion from Create React App to Next.js compatible form &quot;Create React App Migration&quot;.[19] On October 26, 2021, Next.js 12 was released, adding a Rust compiler, making the compilation faster, AVIF support, Edge Functions & Middleware, and Native ESM & URL Imports.[20]</p>

      {/* Styling and features */}
      <h1 className="text-2xl text-[#009B5A] font-bold mt-4">Styling and features</h1>
      <p className="mt-3 text-2xl text-gray-700">The Next.js framework utilizes Jamstack architecture, which distinguishes between front-end and back-end and allows for efficient front-end development that is independent of any back-end APIs.[1] The framework supports common CSS as well as precompiled Scss and Sass, CSS-in-JS, and styled JSX.[10] In addition, it is built with TypeScript support and smart bundling.[21] The open source transpiler Babel is used to transform and compile code into JavaScript usable by a browser. Webpack, another open-source tool, is used to bundle the modules afterwards. All of these tools are used with npm in a terminal.[11].The main feature of Next.js is its use of server-side rendering to reduce the burden on web browsers and provide enhanced security[citation needed]. This can be done for any part of the application or the entire project, allowing for content-rich pages to be singled out for server-side rendering.[7] It can also be done only for first time visitors, to reduce the burden on web browsers that have yet to download any of the site&rsquo;s assets.[8] The &quot;hot reloading&quot; feature detects changes as they are made and re-renders the appropriate pages so the server avoids the need to be restarted. This allows changes made to the application code to be immediately reflected in the web browser, though some browsers will require the page to be refreshed.[7] The software uses page-based routing for developer convenience and includes support for dynamic routing. Other features include hot-module replacement so that modules can be replaced live, automatic code splitting, which only includes code necessary to load the page, and page prefetching to reduce load time.[7]</p>
    </div>
  )
}
